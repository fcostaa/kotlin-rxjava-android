buildscript {
    repositories {
        google()
        maven { url "https://dl.bintray.com/android/android-tools" }
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    dependencies {
        classpath BuildPlugins.androidGradlePlugin
        classpath BuildPlugins.kotlinGradlePlugin
        classpath BuildPlugins.kotlinSerializiationPlugin
        classpath BuildPlugins.dependencyGraphGeneratorPlugin
        classpath BuildPlugins.androidJunitJacocoPlugin
        classpath BuildPlugins.detektGradlePlugin
        classpath BuildPlugins.canidropjetifierPlugin
    }
}

apply plugin: "com.vanniktech.android.junit.jacoco"
apply plugin: "com.github.plnice.canidropjetifier"

junitJacoco {
    jacocoVersion = "0.8.2"
    includeNoLocationClasses = true
}

allprojects {
    repositories {
        google()
        maven { url "https://dl.bintray.com/android/android-tools" }
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/fcostaa/maven" }
    }

    apply plugin: "io.gitlab.arturbosch.detekt"

    detekt {
        toolVersion = "1.0.0-RC12"
        input = files("src/main/kotlin")
        filters = ".*/resources/.*,.*/build/.*"
        config = files("${project.rootDir}/default-detekt-config.yml")
    }

    configurations.all {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
}

subprojects {
    ext {
        add_test_dependencies = { Project p ->
            p.dependencies {
                testImplementation project(':library:unit-test-utils')
                testImplementation KotlinTestDependencies.values
                testImplementation NetworkTestDependencies.values
                testImplementation TestDependencies.values

                androidTestImplementation NetworkTestDependencies.values
                kaptAndroidTest DaggerCompilerDependencies.values
                androidTestImplementation AndroidTestDependencies.values
                androidTestUtil AndroidTestUtilDependencies.values
            }
        }

        CIBuild = System.getenv("CI") == "true"
        // allows for -Dpre-dex=false to be set
        preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Adagger.gradle.incremental"
        }
    }

    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                dexOptions {
                    // Skip pre-dexing when running on CI or when disabled via -Dpre-dex=false.
                    preDexLibraries = preDexEnabled || CIBuild
                }

                adbOptions {
                    timeOutInMs = 5 * 60 * 1000
                }
            }
        }
    }
}
